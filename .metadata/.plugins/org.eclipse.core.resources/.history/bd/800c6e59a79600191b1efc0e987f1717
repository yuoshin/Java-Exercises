package instantiatingSingletonsUsingStaticBlocks;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}

class HayStorage {
	
	private int quantity = 0;
	// constructor marked as private
	private HayStorage() {
	} 

	private static final HayStorage instance = new HayStorage(); // singleton

	public static HayStorage getInstance() {
		return instance;
	}
	//Synchronized modifier prevents two processes from running the same method at the exact same time.
	public synchronized void addHay(int amount) {
		quantity += amount;
	}

	public synchronized boolean removeHay(int amount) {
		if (quantity < amount)
			return false;
		quantity -= amount;
		return true;
	}

	public synchronized int getHayQuantity() {
		return quantity;
	}
}